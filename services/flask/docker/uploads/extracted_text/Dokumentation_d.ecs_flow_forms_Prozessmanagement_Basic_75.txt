d.ve.op

academy
Tutorial d.ecs forms basis

}
form.ui.setEnabled( "btn_Save", true );
Mi

form.instance.save( onSaveSuccess, onSaveFailure );

Oder nur in die Instance sichern

A Tee NR
form.ui.setEnabled( "btn_Save", false );

AS Ta Ca

// Success-Callback

var onSaveInstanceSuccess = function onSaveInstanceSuccess () {
form.ui.setEnabled( "btn_Save", true );

Mi

// Exrror-Callback
var onSavelInstanceFailure = function onSaveInstanceFailure( errorCode, errorMessage) {
if( errorCode == -3) {
// There is a conflict with the db. You need to merge instead of alert.
form.notification.alert( "Unable to save the context since another user has saved the same
instance in between.", "Save Instance Failed" );
}
else {
form.notification.alert( "Unable to save the context: " + errorMessage, "Save Instance Failed"
ve
}
form.ui.setEnabled( "btn_Save", true );
Mi

form.instance.saveInstance( onSaveInstanceSuccess, onSaveInstanceFailure );

12.2. Daten laden

Zusatzliche Performance und damit ein Zeitgewinn beim Laden der Formular-Daten kann Uber das
NICHT-SETZEN der folgenden Checkboxen erzielt werden. Hierbei sollte man aber abhangig von der
implementierten Formular-Funktionalitat entscheiden.

 

Erweiterte Einstellungen

Nehmen Sie hier die erweiterten Einstellungen des Formular-Kontextes vor

 

 

Cache

{]id.3 Workflow-Variablen beim Laden immer aus d.3 ermittel
{-] 4.3 Dokument-Eigenschaften beim Lade

       

romer aus d.3 ermitteln

 

 

Thema - Performance
16/81 d.velop